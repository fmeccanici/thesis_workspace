<launch>

<!-- <node pkg="learning_from_demonstration" name="marker_wrt_ee_publisher" 
type="marker_wrt_ee_publisher.py" output="screen"/>
  -->

<!-- this name is added to $(find learning_from_demonstration)/data/raw/ -->
<arg name="folder" default="complete_model"/>

<arg name="button_source" default="omni"/>

<include file="$(find teleop_control)/launch/teleop_control.launch" >
    <arg name="part_to_publish" value="both" />
</include>

<include file="$(find aruco_ros)/launch/marker_publisher.launch">
    <!-- <arg name="ref_frame" value="xtion_rgb_optical_frame"/> -->
    <arg name="ref_frame" value="base_footprint"/>

</include>

<!-- launch keyboard state publisher node when necessary-->
<include file="$(find keyboard_state_publisher)/launch/keyboard_state_publisher.launch"
  if="$(eval button_source == 'keyboard')"/>

<node pkg="learning_from_demonstration" name="trajectory_teaching" type="trajectory_teaching.py" output="screen">
    <param name="folder" value="$(arg folder)"/>
    <param name="button_source" value="$(arg button_source)"/>
</node>


</launch>